<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TodosAPI</name>
    </assembly>
    <members>
        <member name="T:TodosAPI.Controllers.TasksController">
            <summary>
            API for creating todo/task resources.
            </summary>
        </member>
        <member name="F:TodosAPI.Controllers.TasksController.GetTodoByIdRoute">
            <summary>
            Identifier for the Get TodoById route
            </summary>
        </member>
        <member name="F:TodosAPI.Controllers.TasksController._context">
            <summary>
            The database context
            </summary>
        </member>
        <member name="F:TodosAPI.Controllers.TasksController._logger">
            <summary>
            Logger instance
            </summary>
        </member>
        <member name="F:TodosAPI.Controllers.TasksController._configuration">
            <summary>
            The configuration instance
            </summary>
        </member>
        <member name="F:TodosAPI.Controllers.TasksController._todoLimits">
            <summary>
            The customer limits settings
            </summary>
        </member>
        <member name="M:TodosAPI.Controllers.TasksController.#ctor(Microsoft.Extensions.Logging.ILogger{TodosAPI.Controllers.TasksController},TodosAPI.Data.Context,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Options.IOptions{TodosAPI.CustomSettings.TodoLimits})">
            <summary>
            Instantiate a TasksController with Dependency Injection
            </summary>
            <param name="logger"></param>
            <param name="context"></param>
            <param name="configuration"></param>
            <param name="todoLimits"></param>
        </member>
        <member name="M:TodosAPI.Controllers.TasksController.GetAllTasks(System.String,System.String)">
            <summary>
            Get all tasks.
            </summary>
            <param name="orderByDate">Optional, "Asc" or "Desc" values indicating sorting by ascending or descending chronological order, respectively.</param>
            <param name="taskStatus">Optional, "All", "Completed", or "NotCompleted" filter values by isCompleted attribute being either, true, or false, respectively.</param>
            <returns>A list of Todos</returns>
        </member>
        <member name="M:TodosAPI.Controllers.TasksController.GetTask(System.Int32)">
            <summary>
            Get a task by id.
            </summary>
            <param name="id">Identifier to look up the task by.</param>
            <returns>The Todo requested.</returns>
        </member>
        <member name="M:TodosAPI.Controllers.TasksController.CreateTask(TodosAPI.Models.Todo)">
            <summary>
            Create a task to do.
            </summary>
            <param name="todo">The todo item to create.</param>
        </member>
        <member name="M:TodosAPI.Controllers.TasksController.UpdateTask(System.Int32,TodosAPI.Models.Todo)">
            <summary>
            Update a pre-existing task.
            </summary>
            <param name="id">The identifier of the task to update.</param>
            <param name="todo">The new state of the task to update.</param>
        </member>
        <member name="M:TodosAPI.Controllers.TasksController.DeleteTask(System.Int32)">
            <summary>
            Delete a task.
            </summary>
            <param name="id">The identifier of the task to delete.</param>
        </member>
        <member name="T:TodosAPI.CustomSettings.TodoLimits">
            <summary>
            Defines the todo limit settings
            </summary>
        </member>
        <member name="P:TodosAPI.CustomSettings.TodoLimits.MaxTaskEntries">
            <summary>
            Gets or sets the maximum number of todos.
            </summary>
            <value>
            The maximum number of todos.
            </value>
        </member>
        <member name="T:TodosAPI.Data.Context">
            <summary>
            Coordinates Entity Framework functionality for a given data model is the database context class
            </summary>
            <seealso cref="T:Microsoft.EntityFrameworkCore.DbContext" />
            <remarks>Step 6</remarks>
        </member>
        <member name="M:TodosAPI.Data.Context.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{TodosAPI.Data.Context})">
            <summary>
            Initializes a new instance of the <see cref="T:TodosAPI.Data.Context"/> class.
            </summary>
            <param name="options">The options.</param>
        </member>
        <member name="P:TodosAPI.Data.Context.Todos">
            <summary>
            Represents the Todos table.
            </summary>
            <value>
            The current todos.
            </value>
        </member>
        <member name="M:TodosAPI.Data.Context.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            Connects Model to Table
            </summary>
            <param name="modelBuilder">The builder being used to construct the model for this context.</param>
        </member>
        <member name="T:TodosAPI.Data.Initializer">
            <summary>
            Seeds the database
            </summary>
        </member>
        <member name="M:TodosAPI.Data.Initializer.Initialize(TodosAPI.Data.Context)">
            <summary>
            Seeds the specified dbcontext with data
            </summary>
            <param name="context">The context to seed.</param>
        </member>
        <member name="T:TodosAPI.DTO.ErrorNumber">
            <summary>
            Enumeration of errors to error numbers.
            </summary>
        </member>
        <member name="F:TodosAPI.DTO.ErrorNumber.EXISTS">
            <summary>
            Item already exists.
            </summary>
        </member>
        <member name="F:TodosAPI.DTO.ErrorNumber.TOOLARGE">
            <summary>
            Parameter is too large/long.
            </summary>
        </member>
        <member name="F:TodosAPI.DTO.ErrorNumber.REQUIRED">
            <summary>
            Parameter is required.
            </summary>
        </member>
        <member name="F:TodosAPI.DTO.ErrorNumber.MAXENTITIES">
            <summary>
            Cannot create another item, because it would exceed the configured maximum.
            </summary>
        </member>
        <member name="F:TodosAPI.DTO.ErrorNumber.NOTFOUND">
            <summary>
            Item with given id is not found.
            </summary>
        </member>
        <member name="F:TodosAPI.DTO.ErrorNumber.TOOSMALL">
            <summary>
            Parameter too small.
            </summary>
        </member>
        <member name="F:TodosAPI.DTO.ErrorNumber.INVALID">
            <summary>
            Parameter is otherwise invalid.
            </summary>
        </member>
        <member name="T:TodosAPI.DTO.ErrorResponse">
            <summary>
            Data Transfer Object to serialize various error responses.
            </summary>
        </member>
        <member name="F:TodosAPI.DTO.ErrorResponse.errorNumber">
            <summary>
            Number corresponding to type of error.
            </summary>
            <remarks>
            1: Entity already exists.
            2: The specified parameter is too large.
            3: The parameter is required.
            4: No more entities can be created at this time.
            5: The entity could not be found.
            6: The parameter is too small.
            7: The parameter is not valid.
            </remarks>
        </member>
        <member name="F:TodosAPI.DTO.ErrorResponse.parameterName">
            <summary>
            Parameter name being referenced in the error, if relevant to error.
            </summary>
        </member>
        <member name="F:TodosAPI.DTO.ErrorResponse.parameterValue">
            <summary>
            Parameter value violating validation, if relevant to error.
            </summary>
        </member>
        <member name="F:TodosAPI.DTO.ErrorResponse.errorDescription">
            <summary>
            A developer-only description of the error.
            </summary>
        </member>
        <member name="M:TodosAPI.DTO.ErrorResponse.#ctor(TodosAPI.DTO.ErrorNumber,System.String,System.String)">
            <summary>
            Creates an error.
            </summary>
            <param name="errorNumber">Error number, indicating type of problem.</param>
            <param name="parameterName">Key holding faulty value, if relevant to error.</param>
            <param name="parameterValue">Faulty value converted to a string, if relevant to error.</param>
        </member>
        <member name="T:TodosAPI.DTO.TodoList">
            <summary>
            DTO for transferring a list of Todos.
            </summary>
        </member>
        <member name="F:TodosAPI.DTO.TodoList.tasks">
            <summary>
            List of tasks.
            </summary>
        </member>
        <member name="M:TodosAPI.DTO.TodoList.#ctor(System.Collections.Generic.List{TodosAPI.Models.Todo})">
            <summary>
            A list of tasks to do.
            </summary>
            <param name="tasks">List of relevant tasks.</param>
        </member>
        <member name="T:TodosAPI.Common.LoggingEvents">
            <summary>
            Enumeration of logging levels for each type of action
            </summary>
        </member>
        <member name="F:TodosAPI.Common.LoggingEvents.GetItem">
            <summary>
            Logging for GetItem actions
            </summary>
        </member>
        <member name="F:TodosAPI.Common.LoggingEvents.InsertItem">
            <summary>
            Logging for InsertItem actions
            </summary>
        </member>
        <member name="F:TodosAPI.Common.LoggingEvents.UpdateItem">
            <summary>
            Logging for UpdateItem actions
            </summary>
        </member>
        <member name="F:TodosAPI.Common.LoggingEvents.DeleteItem">
            <summary>
            Logging for DeleteItem actions
            </summary>
        </member>
        <member name="F:TodosAPI.Common.LoggingEvents.GetItemNotFound">
            <summary>
            Logging for GetItem errors where item is not found
            </summary>
        </member>
        <member name="F:TodosAPI.Common.LoggingEvents.UpdateItemNotFound">
            <summary>
            Logging for UpdateItem where target item is not found
            </summary>
        </member>
        <member name="F:TodosAPI.Common.LoggingEvents.DeleteItemNotFound">
            <summary>
            Logging for DeleteItem where target item is not found
            </summary>
        </member>
        <member name="F:TodosAPI.Common.LoggingEvents.InternalError">
            <summary>
            Logging for any other internal server error
            </summary>
        </member>
        <member name="T:TodosAPI.Models.Todo">
            <summary>
            The Todo entity.
            </summary>
        </member>
        <member name="P:TodosAPI.Models.Todo.id">
            <summary>
            Gets or sets the identifier of the todo.
            </summary>
            <value>The todo identifier.</value>
        </member>
        <member name="P:TodosAPI.Models.Todo.taskName">
            <summary>
            Gets or sets the content of the todo.
            </summary>
            <value>The content of the task.</value>
        </member>
        <member name="P:TodosAPI.Models.Todo.isCompleted">
            <summary>
            Gets or sets the completion status of the todo.
            </summary>
            <value>The completion status of the todo.</value>
        </member>
        <member name="P:TodosAPI.Models.Todo.dueDate">
            <summary>
            Gets or sets the due date of the todo.
            </summary>
            <value>The due date of the todo.</value>
        </member>
        <member name="M:TodosAPI.Models.Todo.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:TodosAPI.Program">
            <summary>
            Program to run Todo API
            </summary>
        </member>
        <member name="M:TodosAPI.Program.Main(System.String[])">
            <summary>
            Defines the main entry point for the ASP.NET Core Web API application
            </summary>
            <param name="args">CLI Arguments.</param>
        </member>
        <member name="M:TodosAPI.Program.BuildWebHost(System.String[])">
            <summary>
            Builds a new WebHost to serve the API
            </summary>
            <param name="args">Args from command line.</param>
            <returns>A spun-up Todo API webserver host instance.</returns>
        </member>
        <member name="T:TodosAPI.Startup">
            <summary>
            Defines the configuration of the Web API application
            </summary>
        </member>
        <member name="M:TodosAPI.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            Initializes a new instance of the <see cref="T:TodosAPI.Startup" /> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="hostingEnvironment">The hosting environment.</param>
        </member>
        <member name="P:TodosAPI.Startup.HostingEnvironment">
            <summary>
            Gets the hosting environment.
            </summary>
            <value>
            The hosting environment.
            </value>
        </member>
        <member name="P:TodosAPI.Startup.Configuration">
            <summary>
            Gets the configuration.
            </summary>
            <value>
            The configuration.
            </value>
        </member>
        <member name="M:TodosAPI.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services">The services.</param>
        </member>
        <member name="M:TodosAPI.Startup.ConfigureSwaggerUI(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions)">
            <summary>
            Configures the swagger UI in middleware.
            </summary>
            <param name="swaggerGenOptions">The swagger gen options.</param>
        </member>
        <member name="M:TodosAPI.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            Configures the application.
            </summary>
            <param name="app">The application.</param>
            <param name="env">The env.</param>
        </member>
    </members>
</doc>
