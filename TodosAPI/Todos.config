<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TodosAPI</name>
    </assembly>
    <members>
        <member name="M:TodosAPI.Controllers.TasksController.GetAllTasks">
            <summary>
            Get all tasks.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TodosAPI.Controllers.TasksController.GetTask(System.Int32)">
            <summary>
            Get a task by id.
            </summary>
            <param name="id">Identifier to look up the task by.</param>
            <returns></returns>
        </member>
        <member name="M:TodosAPI.Controllers.TasksController.CreateTask(TodosAPI.DTO.Todo)">
            <summary>
            Create a task to do.
            </summary>
            <param name="todo">The todo item to create.</param>
        </member>
        <member name="M:TodosAPI.Controllers.TasksController.UpdateTask(System.Int32,TodosAPI.DTO.Todo)">
            <summary>
            Update a pre-existing task.
            </summary>
            <param name="id">The identifier of the task to update.</param>
            <param name="todo">The new state of the task to update.</param>
        </member>
        <member name="M:TodosAPI.Controllers.TasksController.DeleteTask(System.Int32)">
            <summary>
            Delete a task.
            </summary>
            <param name="id">The identifier of the task to delete.</param>
        </member>
        <member name="T:TodosAPI.DTO.ErrorNumber">
            <summary>
            Enumeration of errors to error numbers.
            </summary>
        </member>
        <member name="F:TodosAPI.DTO.ErrorResponse.errorNumber">
            <summary>
            Number corresponding to type of error.
            </summary>
            <remarks>
            1: Entity already exists.
            2: The specified parameter is too large.
            3: The parameter is required.
            4: No more entities can be created at this time.
            5: The entity could not be found.
            6: The parameter is too small.
            7: The parameter is not valid.
            </remarks>
        </member>
        <member name="F:TodosAPI.DTO.ErrorResponse.parameterName">
            <summary>
            Parameter name being referenced in the error, if relevant to error.
            </summary>
        </member>
        <member name="F:TodosAPI.DTO.ErrorResponse.parameterValue">
            <summary>
            Parameter value violating validation, if relevant to error.
            </summary>
        </member>
        <member name="F:TodosAPI.DTO.ErrorResponse.errorDescription">
            <summary>
            A developer-only description of the error.
            </summary>
        </member>
        <member name="M:TodosAPI.DTO.ErrorResponse.#ctor(TodosAPI.DTO.ErrorNumber,System.String,System.String)">
            <summary>
            Creates an error.
            </summary>
            <param name="errorNumber">Error number, indicating type of problem.</param>
            <param name="parameterName">Key holding faulty value, if relevant to error.</param>
            <param name="parameterValue">Faulty value converted to a string, if relevant to error.</param>
        </member>
        <member name="F:TodosAPI.DTO.Todo.taskName">
            <summary>
            Name of task.
            </summary>
        </member>
        <member name="F:TodosAPI.DTO.Todo.isCompleted">
            <summary>
            States whether the task is completed or not.
            </summary>
        </member>
        <member name="F:TodosAPI.DTO.Todo.dueDate">
            <summary>
            ISO8601 Datestring representing when the task is due.
            </summary>
        </member>
        <member name="F:TodosAPI.DTO.TodoList.tasks">
            <summary>
            List of tasks.
            </summary>
        </member>
        <member name="M:TodosAPI.DTO.TodoList.#ctor(System.Collections.Generic.List{TodosAPI.DTO.TodoResponse})">
            <summary>
            A list of tasks to do.
            </summary>
            <param name="tasks">List of relevant tasks.</param>
        </member>
        <member name="F:TodosAPI.DTO.TodoResponse.id">
            <summary>
            Unique identifier of this task.
            </summary>
        </member>
        <member name="F:TodosAPI.DTO.TodoResponse.taskName">
            <summary>
            Name of task.
            </summary>
        </member>
        <member name="F:TodosAPI.DTO.TodoResponse.isCompleted">
            <summary>
            States whether the task is completed or not.
            </summary>
        </member>
        <member name="F:TodosAPI.DTO.TodoResponse.dueDate">
            <summary>
            ISO8601 Datestring representing when the task is due.
            </summary>
        </member>
        <member name="M:TodosAPI.DTO.TodoResponse.#ctor(System.Int64,System.String,System.Boolean,System.DateTime)">
            <summary>
            Creates a Todo task.
            </summary>
            <param name="id">Unique integer identifier.</param>
            <param name="taskName">Unique task name/content.</param>
            <param name="isCompleted">Whether task has been completed.</param>
            <param name="dueDate">DateTime (converted to ISO8601 in constructor).</param>
        </member>
        <member name="T:TodosAPI.Startup">
            <summary>
            Defines the configuration of the Web API applicaiton
            </summary>
        </member>
        <member name="M:TodosAPI.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            Initializes a new instance of the <see cref="T:TodosAPI.Startup" /> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="hostingEnvironment">The hosting environment.</param>
        </member>
        <member name="P:TodosAPI.Startup.HostingEnvironment">
            <summary>
            Gets the hosting environment.
            </summary>
            <value>
            The hosting environment.
            </value>
        </member>
        <member name="P:TodosAPI.Startup.Configuration">
            <summary>
            Gets the configuration.
            </summary>
            <value>
            The configuration.
            </value>
        </member>
        <member name="M:TodosAPI.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services">The services.</param>
        </member>
        <member name="M:TodosAPI.Startup.ConfigureSwaggerUI(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions)">
            <summary>
            Configures the swagger UI in middleware.
            </summary>
            <param name="swaggerGenOptions">The swagger gen options.</param>
        </member>
        <member name="M:TodosAPI.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            Configures the application.
            </summary>
            <param name="app">The application.</param>
            <param name="env">The env.</param>
        </member>
        <member name="T:Startup">
            <summary>
            Defines the configuration of the Web API applicaiton
            </summary>
        </member>
        <member name="M:Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            Initializes a new instance of the <see cref="T:Startup" /> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="hostingEnvironment">The hosting environment.</param>
        </member>
        <member name="P:Startup.HostingEnvironment">
            <summary>
            Gets the hosting environment.
            </summary>
            <value>
            The hosting environment.
            </value>
        </member>
        <member name="P:Startup.Configuration">
            <summary>
            Gets the configuration.
            </summary>
            <value>
            The configuration.
            </value>
        </member>
        <member name="M:Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services">The services.</param>
        </member>
        <member name="M:Startup.ConfigureSwaggerUI(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions)">
            <summary>
            Configures the swagger UI in middleware.
            </summary>
            <param name="swaggerGenOptions">The swagger gen options.</param>
        </member>
        <member name="M:Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            Configures the application.
            </summary>
            <param name="app">The application.</param>
            <param name="env">The env.</param>
        </member>
    </members>
</doc>
